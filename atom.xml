<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lidong's notes]]></title>
  <link href="http://notes.lidong.me/atom.xml" rel="self"/>
  <link href="http://notes.lidong.me/"/>
  <updated>2016-04-05T23:47:09+08:00</updated>
  <id>http://notes.lidong.me/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[rpm -qa]]></title>
    <link href="http://notes.lidong.me/rpm-qa.html"/>
    <updated>2016-04-04T15:21:23+08:00</updated>
    <id>http://notes.lidong.me/rpm-qa.html</id>
    <content type="html"><![CDATA[
<p>centos如何查看系统安装了哪些程序</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[查看CentOS版本方法]]></title>
    <link href="http://notes.lidong.me/centos-v.html"/>
    <updated>2016-04-04T14:52:39+08:00</updated>
    <id>http://notes.lidong.me/centos-v.html</id>
    <content type="html"><![CDATA[
<p>有以下命令可以查看：</p>

<h1 id="toc_0">lsb_release -a</h1>

<p>LSB Version:    :core-3.1-ia32:core-3.1-noarch:graphics-3.1-ia32:graphics-3.1-noarch<br/>
Distributor ID: CentOS<br/>
Description:    CentOS release 5.4 (Final)<br/>
Release:        5.4<br/>
Codename:       Final</p>

<p>这个命令适用于所有的linux，包括Redhat、SuSE、Debian、Centos等发行版。</p>

<p>root@MyMail ~ # uname<br/>
Linux<br/>
root@MyMail ~ # uname -r<br/>
2.6.18-164.el5<br/>
[root@localhost ~]# uname -a<br/>
Linux localhost.localdomain 2.6.18-194.el5 #1 SMP Fri Apr 2 14:58:35 EDT 2010 i686 i686 i386 GNU/Linux</p>

<p>以下二种方法适用于RedHat,CentOS</p>

<p>root@MyMail ~ # cat /etc/redhat-release<br/>
CentOS release 5.4 (Final)</p>

<p>登录到linux执行rpm -q redhat-release</p>

<h1 id="toc_1">rpm -q redhat-release</h1>

<p>或CentOS</p>

<p>root@MyMail ~ # rpm -q centos-release<br/>
centos-release-5-4.el5.centos.1</p>

<p>当前centos 版本与redhat对应的版本的命令</p>

<h1 id="toc_2">cat /proc/version</h1>

<p>Linux version 2.6.9-78.ELsmp (<a href="mailto:mockbuild@builder16.centos.org">mockbuild@builder16.centos.org</a>) (gcc version 3.4.6 20060404 (Red Hat 3.4.6-10)) #1 SMP Fri Jul 25 00:04:28 EDT 2008</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dockerfile]]></title>
    <link href="http://notes.lidong.me/dockerfile.html"/>
    <updated>2016-04-03T22:17:20+08:00</updated>
    <id>http://notes.lidong.me/dockerfile.html</id>
    <content type="html"><![CDATA[
<p>run<br/>
    shell格式<br/>
        RUN yum install -y nginx<br/>
    exec格式（推荐）<br/>
        RUN <a href="json%E6%A0%BC%E5%BC%8F">&quot;yum&quot;,&quot;install&quot;,&quot;-y&quot;,&quot;nginx&quot;</a></p>

<p>EXPOSE</p>

<p>CMD<br/>
    CMD[&quot;&quot;]</p>

<p>ENTRYPOINT</p>

<p>VOLUME</p>

<pre><code>//为基于此镜像创建的容器创建一个名为/opt/project的挂载点
VOLUME [&quot;/opt/project&quot;]

VOLUME[&quot;/opt/project&quot;,&quot;data&quot;]
</code></pre>

<p>ADD</p>

<pre><code>ADD  home 
ADD  http://www.example.com/abc.zip
ADD
</code></pre>

<p>COPY </p>

<pre><code>COPY 
</code></pre>

<p>ONBUILD</p>

<pre><code>¡
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[docker 报错]]></title>
    <link href="http://notes.lidong.me/docker-error.html"/>
    <updated>2016-04-03T21:27:14+08:00</updated>
    <id>http://notes.lidong.me/docker-error.html</id>
    <content type="html"><![CDATA[
<pre><code>Cannot connect to the Docker daemon. Is the docker daemon running on this host?


eval &quot;$(docker-machine env default)&quot;

&lt;https://stackoverflow.com/questions/21871479/docker-cant-connect-to-docker-daemon&gt;


Warning: failed to get default registry endpoint from daemon (Cannot connect to the Docker daemon. Is the docker daemon running on this host?). Using system default: https://index.docker.io/v1/
</code></pre>

<p>Cannot connect to the Docker daemon. Is the docker daemon running on this host?<br/>
[dong@dooonooo ~]$ systemctl docker start <br/>
Unknown operation &#39;docker&#39;.</p>

<p><code># systemctl start docker</code></p>

<p>Docker运行容器后自动退出<br/>
<a href="http://www.pangxie.space/docker/96">http://www.pangxie.space/docker/96</a><br/>
Khmv2NKUaFhU3z8D</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[css bug]]></title>
    <link href="http://notes.lidong.me/css-bug.html"/>
    <updated>2016-04-02T20:48:54+08:00</updated>
    <id>http://notes.lidong.me/css-bug.html</id>
    <content type="html"><![CDATA[
<p>CSS存在Bug，但怎么能让我们记住这些Bug，以便在以后编写CSS代码的时候能很好的应对，这不，有心人就编写了这么一个CSS BUG顺口溜，还是挺不错的：<br/>
一、IE边框若显若无，须注意，定是高度设置已忘记;<br/>
二、浮动产生有缘故，若要父层包含住，紧跟浮动要清除，容器自然显其中;<br/>
三、三像素文本慢移不必慌，高度设置帮你忙;<br/>
四、兼容各个浏览须注意，默认设置行高可能是杀手;<br/>
五、独立清除浮动须铭记，行高设无，高设零，设计效果兼浏览;<br/>
六、学布局须思路，路随布局原理自然直，轻松驾驭html，流水布局少hack，代码清爽，兼容好，友好引擎喜欢迎。<br/>
七、所有标签皆有源，只是默认各不同，span是无极，无极生两仪—内联和块级，img较特殊，但也遵法理，其他只是改造各不同，一个*号全归原，层叠样式理须多练习，万物皆规律。<br/>
八、图片链接排版须小心，图片链接文字链接若对齐，padding和vertical-align:middle要设定，虽差微细倒无妨。<br/>
九、IE浮动双边距，请用display：inline拘。<br/>
十、列表横向排版，列表代码须紧靠，空隙自消须铭记。<br/>
怎么样，是不是心里清楚了一些，至少来说以后对编写CSS有帮助的。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用的移动端框架]]></title>
    <link href="http://notes.lidong.me/mobile-frame.html"/>
    <updated>2016-03-29T00:52:47+08:00</updated>
    <id>http://notes.lidong.me/mobile-frame.html</id>
    <content type="html"><![CDATA[
<p>zepto.js<br/>
语法与jquery几乎一样，会jquery基本会zepto~<br/>
最新版本已经更新到1.16<br/>
官网：<a href="http://zeptojs.com/">http://zeptojs.com/</a><br/>
中文(非官网)：<a href="http://www.css88.com/doc/zeptojs_api/">http://www.css88.com/doc/zeptojs_api/</a><br/>
常使用的扩展模块：<br/>
浏览器检测：<a href="https://github.com/madrobby/zepto/blob/master/src/detect.js">https://github.com/madrobby/zepto/blob/master/src/detect.js</a><br/>
tap事件：<a href="https://github.com/madrobby/zepto/blob/master/src/touch.js">https://github.com/madrobby/zepto/blob/master/src/touch.js</a><br/>
 <br/>
iscroll.js<br/>
解决页面不支持弹性滚动，不支持fixed引起的问题~<br/>
实现下拉刷新，滑屏，缩放等功能~<br/>
最新版本已经更新到5.0<br/>
官网：<a href="http://cubiq.org/iscroll-5">http://cubiq.org/iscroll-5</a><br/>
underscore.js<br/>
slip.js<br/>
iSlider.js<br/>
fullpage.js</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[fullpage全屏滚动插件]]></title>
    <link href="http://notes.lidong.me/fullpage.js.html"/>
    <updated>2016-03-27T23:27:33+08:00</updated>
    <id>http://notes.lidong.me/fullpage.js.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">基本的页面结构</h3>

<pre><code>&lt;div id =&quot;fullpage&quot;&gt;
    &lt;div class = &quot;section&quot;&gt; 一些内容&lt;/div&gt;
    &lt;div class = &quot;section&quot;&gt; 一些内容&lt;/div&gt;
    &lt;div class = &quot;section&quot;&gt; 一些内容&lt;/div&gt;
    &lt;div class = &quot;section&quot;&gt; 一些内容&lt;/div&gt;
&lt;/div&gt;
</code></pre>

<p>在某一个section页中增加slide（幻灯片）</p>

<pre><code>&lt;div class = &quot;section&quot;&gt;
    &lt;div class = &quot;slide&quot;&gt;slide1&lt;/div&gt;
    &lt;div class = &quot;slide&quot;&gt;slide1&lt;/div&gt;
    &lt;div class = &quot;slide&quot;&gt;slide1&lt;/div&gt;
    &lt;div class = &quot;slide&quot;&gt;slide1&lt;/div&gt;
&lt;/div&gt;
</code></pre>

<table>
<thead>
<tr>
<th>属性</th>
<th>意义</th>
</tr>
</thead>

<tbody>
<tr>
<td>sectionsColor:</td>
<td>设置每个section的background-color属性</td>
</tr>
<tr>
<td>controlArrows:</td>
<td>设置slide幻灯片是否显示箭头，默认true。移动设备可以滑动</td>
</tr>
<tr>
<td>verticalCentered:</td>
<td>设置每一页内容是否垂直居中，默认为true</td>
</tr>
<tr>
<td>resize：</td>
<td>字体是否随着窗口缩放而缩放，默认false。</td>
</tr>
<tr>
<td>scrollingSpeend：</td>
<td>滚动速度，单位毫秒，默认为700</td>
</tr>
<tr>
<td>anchors:</td>
<td>定义锚链接,默认值为[],有了锚链接，可以快速打开定位到某一页面。<br>锚链接的值不要和页面的中任何id或name相同，不要添加#</td>
</tr>
<tr>
<td>lockAnchors:</td>
<td>是否锁定锚链接，默认为false，<br>如果设置为true，那么定义的锚链接即anchors属性则没有效果。</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>easing:</td>
<td>定义页面section滚动的动画方式，默认是easeInOutCubic, <br>如果修改此项，需要引入jquery.easings插件，或jquery ui。</td>
</tr>
<tr>
<td>css3:</td>
<td>是否使用css3 transforms来实现滚动效果，默认true。<br>(这个配置项可以提高支持css3的浏览器的速度，<br>如果浏览器不支持css3，则会是 jquery来代替css3实现滚动效果。)</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>loopTop：</td>
<td>滚动到最顶部是否连续滚动到底部，默认false。</td>
</tr>
<tr>
<td>loopbuttom：</td>
<td>滚到到最顶部是否连续滚动到顶部，默认false。</td>
</tr>
<tr>
<td>loopHorizontal：</td>
<td>横向slider幻灯片是否循环滚动，默认为true。</td>
</tr>
<tr>
<td>autoScrolling:</td>
<td>是否使用插件的滚动方式，默认为true，<br>选择false，则出现浏览器自带的滚动条，将不会按页滚动，<br>而是按照滚动条的默认行为来滚动。</td>
</tr>
<tr>
<td>scrollBar:</td>
<td>是否包含滚动条，默认为false，<br>如果设置为true，则浏览器自带的滚动条出现，<br>页面滚动时还是按页滚动，但是滚动条的默认行为也有效。</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>paddingTop/paddingBottom:</td>
<td>设置每一个section顶部和底部的pandding默认是0。<br>一般如果我们需要设置一个固定在顶部或底部的菜单、导航元素等，<br>可以使用这两个配置项。</td>
</tr>
<tr>
<td>fixedelements：</td>
<td>固定的元素，默认null，需要配置jquery选择器，<br>在页面滚动的时候，fixedElements设置的元素固定不动。<br>（fixedElements:&#39;#header&#39;）</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>keyboardScrolling:</td>
<td>是否可以使用键盘方向键导航，默认为true</td>
</tr>
<tr>
<td>touchSensitivity:</td>
<td>在移动设备中的滑动页面的敏感性，默认为5，<br>按百分比来衡量，最大值100，越大越来滑动。</td>
</tr>
<tr>
<td>continuousVertical：</td>
<td>是否循环滚动，默认为false。<br>如果设置为true，则页面会循环滚动，<br>不像loopTop或loopBottom那样出现跳动,<br>与loopTop、loopBottom不兼容，不能同时设置。</td>
</tr>
<tr>
<td>animateAnchor:</td>
<td>锚链接是否可以控制滚动动画，默认为true。<br>如果设置为false，则通过锚链接定位到某个页面不再有动画效果</td>
</tr>
<tr>
<td>recordHistory:</td>
<td>是否记录历史，默认为true，<br>可以记录页面滚动的历史，通过浏览器的前进后退来导航。<br>如果设置了autoScrolling:false,那么这个配置也将被关闭，即设置为false</td>
</tr>
<tr>
<td>menu:</td>
<td>绑定菜单，设定data-menuanchor属性与anchors的值对应后，<br>菜单可以控制滚动，<br>默认为false。可以设置为菜单的jquery选择器。</td>
</tr>
<tr>
<td>navigation:</td>
<td>是否显示导航，默认为false。<br>如果设置为true，会显示小圆点，作为导航。</td>
</tr>
<tr>
<td>navigationPosition：</td>
<td>导航小圆点的位置，可以设置为left或right。</td>
</tr>
<tr>
<td>navigationtooltips：</td>
<td>导航小圆点的tooltips设置，<br>默认为[]，注意按照顺序设置。</td>
</tr>
<tr>
<td>showactiveTooltip:</td>
<td>是否显示当前页面的导航的tooltip信息，<br>默认为false</td>
</tr>
<tr>
<td>slidesNavigation：</td>
<td>是否显示横向幻灯片的导航，默认为false。</td>
</tr>
<tr>
<td>slidesNavPosition:</td>
<td>横向幻灯片导航的位置，默认为bottom，可以设置为top或bottom</td>
</tr>
<tr>
<td>scrollOverflow:</td>
<td>内容超过满屏后是否显示滚动条，默认为false。<br>如果设置为true，则会显示滚动条，如果要显示滚动条查看内容，<br>还需要jquery.slimscroll插件的配合。<br>slimscroll插件主要用于模拟传统的浏览器滚动条。</td>
</tr>
<tr>
<td>sectionselector：</td>
<td>section的选择器，默认为.section。</td>
</tr>
<tr>
<td>slideSelector:</td>
<td>slide的选择器，默认为.slide。</td>
</tr>
</tbody>
</table>

<h3 id="toc_1">方法</h3>

<p>调用方法：$.fn.fullpage.xxxx();</p>

<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>

<tbody>
<tr>
<td>moveSectionUp():</td>
<td>向上滚动</td>
</tr>
<tr>
<td>moveSectionDown():</td>
<td>向下滚动</td>
</tr>
<tr>
<td>moveTo(section，slide):</td>
<td>滚动到第几页，第几个幻灯片，<br>页面是从1开始，而幻灯片，从0开始</td>
</tr>
<tr>
<td>setAutoScrolling(boolean):</td>
<td>动态设置autoscrolling</td>
</tr>
<tr>
<td>setLockAnchors(boolean):</td>
<td>动态设置LockAnchors</td>
</tr>
<tr>
<td>setRecordHistory(boolean):</td>
<td>动态设置RecordHistory</td>
</tr>
<tr>
<td>setScrollingSpeed(milliseconds):</td>
<td>动态设置ScrollingSpeed</td>
</tr>
<tr>
<td>setAllowScrolling(boolean,[directions]):</td>
<td>添加或删除鼠标滚轮/滑动控制,<br>第一个参数true为启用，false为禁用，<br>后面的参数为方向取值包含all,up,down,left,right,<br>可以使用多个，逗号分隔</td>
</tr>
</tbody>
</table>

<h3 id="toc_2">更多</h3>

<p>边看<a href="http://www.imooc.com/learn/514">FullPage.js全屏滚动插件</a>视频边整理</p>

<p>整理得差不多了，发现有相似的整理<a href="http://www.dowebok.com/77.html">http://www.dowebok.com/77.html</a>推荐一下</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[html5移动端meta信息]]></title>
    <link href="http://notes.lidong.me/html5-mobile-meta.html"/>
    <updated>2016-03-25T00:28:06+08:00</updated>
    <id>http://notes.lidong.me/html5-mobile-meta.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">meta信息</h3>

<p>窗口宽度自动调整到设备宽度，禁止用户缩放页面<br/>
    <meta name="viewport" content = "width = device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no" /> </p>

<p>忽略将页面中的数字识别为电话号码</p>

<pre><code>&lt;meta name =&quot;format-detaction&quot; content=&quot;telephone=no&quot; /&gt;
</code></pre>

<p>忽略android对邮箱地址的识别</p>

<pre><code>&lt;meta name = &quot;format-detection&quot; content= &quot;email=no&quot; /&gt;
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[canvas基础]]></title>
    <link href="http://notes.lidong.me/canvas-basic.html"/>
    <updated>2016-03-19T15:04:33+08:00</updated>
    <id>http://notes.lidong.me/canvas-basic.html</id>
    <content type="html"><![CDATA[
<p>HTML</p>

<pre><code>&lt;canvas id=&quot;canvas&quot;&gt;&lt;canvas&gt;
</code></pre>

<p>Javascript</p>

<pre><code>var canvas=document.getElemenById(&quot;canvas&quot;)
var context=canvas.getContext(&#39;2d&#39;);

//使用context进行绘制
</code></pre>

<p>画直线</p>

<pre><code>//状态设置
context.moveTo(100,100);
context.lineTo(700,700);
context.lineWidth=10;//线条宽度
context.strokeStyle=&quot;#058&quot;;// 线条颜色
//绘制
context.stroke();

//创建一个全新的路径绘制
context.beginPath();
//关闭路径，绘制封闭的图形
context.closePath();

//颜色填充
fillStyle =&quot;yellow&quot;;
fill();

//矩形
rect(x,y,width,height);
//包含填充的矩形
fillRect(x,y width，height);
//绘制边框
strokeRect();
</code></pre>

<p>线条样式</p>

<pre><code>//设置线条的开始、结尾显示样式
lineCap=&quot;butt&quot;(default)
         &quot;round&quot;（圆形）
         &quot;square&quot;   （方形）
//线条连接处
lineJoin = &quot;miter&quot;(default)尖角
           &quot;bevel&quot;
           &quot;round&quot;圆角           
miterLimit（默认为10） 
</code></pre>

<p>图形</p>

<pre><code>//图形状态保存
save()
restore()

translate(x,y);  //位移
rotate(deg);  //旋转
scale(sx,sy);   //缩放

//图形变换操作(变换矩阵)
transform(a,b,c,d,e,f);
setTransform(a,b,c,d,e,f);
</code></pre>

<p><img src="http://img.lidong.me/2015/03/nBBh9iN5ebO3.png" alt="变换矩阵"/></p>

<pre><code>//填充样式
fillStyle = color
            gradient
            image
            canvas
            video

fillStyle = image||canvas||video
createPattern(img,repeat-style)        
          (canvas,repeat-style)
          (video,repeat-style)

          repeat-style:no-repeat
                        repeat-x
                        repeat-y
                        repeat
</code></pre>

<p>线条样式                        </p>

<pre><code>strokestyle:    
</code></pre>

<p>曲线绘制               </p>

<pre><code>context.arc(centerx,centery,radius,startingAngle,endingAngle, anticlockwise = false)
context.arcTo(x1,y1,x2,y2,radius)//沿切线绘制曲线
</code></pre>

<p>贝塞尔曲线</p>

<pre><code>context.quadraticCurveTo(
                    x1,y1,   //---控制点
                    x2,y2)   //---结束点
context,bezeirCurveTo(
                    x1,y1,x2,y2,   //---控制点
                    x3,y3)         //---结束点
</code></pre>

<p>文字渲染</p>

<pre><code>context.font = &quot;bold  40px Arial&quot;

context.fillText(string,x,y,[maxlen]);
context.strokeText(string,x,y,[maxlen]);
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS中字体文件引入]]></title>
    <link href="http://notes.lidong.me/font-face.html"/>
    <updated>2016-03-17T22:10:49+08:00</updated>
    <id>http://notes.lidong.me/font-face.html</id>
    <content type="html"><![CDATA[
<pre><code>@font-face{
font-family:&quot;icomoon&quot;;
src:url(&quot;../fonts/icomoon.eot&quot;);/*IE9兼容*/
/*?为IE6-8兼容*/
src:url(&quot;../fonts/icomoon.eot?&quot;) format(&quot;embedded-opentype&quot;),
    url(&quot;../fonts/icomoon.woff&quot;)format(&quot;woff&quot;),
    url(&quot;../fonts/icomoon.ttf&quot;)format(&quot;truetype&quot;),
    url(&quot;../fonts/icomoon.svg&quot;)formt(&quot;svg&quot;),
    font-weight:normal;
    font-style:normal;
}

.icon{
    font-family:&quot;icomoon&quot;;
    font-weight:normal;
    font-style:normal;
    -webkit-font-smoothing:antialiased;/*处理防锯齿*/
    -moz-osx-font-somthing:grayscale;
}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery验证插件 jquery-validation]]></title>
    <link href="http://notes.lidong.me/jquery-vslidation.html"/>
    <updated>2016-03-13T12:56:06+08:00</updated>
    <id>http://notes.lidong.me/jquery-vslidation.html</id>
    <content type="html"><![CDATA[
<p>method 验证方法</p>

<p>rule验证规则</p>

<p>validata核心方法</p>

<p>debug 设置不提交</p>

<p>基本验证方法</p>

<p>(1)、required:true               必输字段<br/>
(2)、remote:&quot;check.php&quot;          使用ajax方法调用check.php验证输入值<br/>
(3)、email:true                  必须输入正确格式的电子邮件<br/>
(4)、url:true                    必须输入正确格式的网址<br/>
(5)、date:true                   必须输入正确格式的日期<br/>
(6)、dateISO:true                必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性<br/>
(7)、number:true                 必须输入合法的数字(负数，小数)<br/>
(8)、digits:true                 必须输入整数<br/>
(9)、creditcard:true             必须输入合法的信用卡号<br/>
(10)、equalTo:&quot;#password&quot;        输入值必须和#password相同<br/>
(11)、accept:                    输入拥有合法后缀名的字符串（上传文件的后缀）<br/>
(12)、maxlength:5                输入长度最多是5的字符串(汉字算一个字符)<br/>
(13)、minlength:10               输入长度最小是10的字符串(汉字算一个字符)<br/>
(14)、rangelength:[5,10]         输入长度必须介于 5 和 10 之间的字符串&quot;)(汉字算一个字符)<br/>
(15)、range:[5,10]               输入值必须介于 5 和 10 之间<br/>
(16)、max:5                      输入值不能大于5<br/>
(17)、min:10                     输入值不能小于10</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery]]></title>
    <link href="http://notes.lidong.me/learn-jquery.html"/>
    <updated>2016-03-01T10:25:30+08:00</updated>
    <id>http://notes.lidong.me/learn-jquery.html</id>
    <content type="html"><![CDATA[
<p>1.jQuery安装<br/>
<script src="http://code.jquery.com/jquery-1.9.0.js"></script><br/>
<script src="http://code.jquery.com/jquery-1.12.1.js"></script>(目前最新)</p>

<p>2.jQuery语法<br/>
jQuery选择器<br/>
jQuery事件<br/>
jQuery效果<br/>
显示隐藏<br/>
淡入淡出<br/>
滑动<br/>
动画<br/>
stop</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[svg简单介绍]]></title>
    <link href="http://notes.lidong.me/svg-simple.html"/>
    <updated>2016-02-29T22:54:01+08:00</updated>
    <id>http://notes.lidong.me/svg-simple.html</id>
    <content type="html"><![CDATA[
<pre><code>&lt;svg width=&quot;120&quot; height=&quot;120&quot; viewBox=&quot;0 0 120 120&quot; version=&quot;1.1&quot;&gt;
    &lt;circle cx=&quot;60&quot; cy=&quot;60&quot; r=&quot;50&quot;&gt; &lt;/circle&gt;
&lt;/svg&gt;
</code></pre>

<p>引入外部svg文件<br/>
iframe</p>

<pre><code>&lt;body&gt;
    &lt;iframe src=&quot;/svg.svg&quot; width=&quot;300&quot; height=&quot;400&quot;&gt;&lt;/iframe&gt;
&lt;/body&gt;
</code></pre>

<h3 id="toc_0">参考</h3>

<p>mozilla svg <a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG">https://developer.mozilla.org/zh-CN/docs/Web/SVG</a></p>

<p>svg 元素参考 <a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element">https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[nginx自启动设置]]></title>
    <link href="http://notes.lidong.me/nginx-conf-start.html"/>
    <updated>2016-02-29T15:21:13+08:00</updated>
    <id>http://notes.lidong.me/nginx-conf-start.html</id>
    <content type="html"><![CDATA[
<p>编写shell脚本，并把shell脚本启动命令加入到自启动名单中。</p>

<p>vi /etc/init.d/nginx  </p>

<pre><code>#!/bin/bash
# nginx Startup script for the nginx HTTP Server
# it is v.0.0.2 version.
# chkconfig: - 85 15
# description: nginx is a high-performance web and proxy server.
#              It has a lot of features, but it&#39;s not for everyone.
# processname: nginx
# pidfile: /var/run/nginx.pid
# config: /usr/local/nginx/conf/nginx.conf
nginxd=/usr/local/nginx/sbin/nginx
nginx_config=/usr/local/nginx/conf/nginx.conf
nginx_pid=/var/run/nginx.pid
RETVAL=0
prog=&quot;nginx&quot;
# Source function library.
. /etc/rc.d/init.d/functions
# Source networking configuration.
. /etc/sysconfig/network
# Check that networking is up.
[ ${NETWORKING} = &quot;no&quot; ] &amp;&amp; exit 0
[ -x $nginxd ] || exit 0
# Start nginx daemons functions.
start() {
if [ -e $nginx_pid ];then
  echo &quot;nginx already running....&quot;
  exit 1
fi
  echo -n $&quot;Starting $prog: &quot;
  daemon $nginxd -c ${nginx_config}
  RETVAL=$?
  echo
  [ $RETVAL = 0 ] &amp;&amp; touch /var/lock/subsys/nginx
  return $RETVAL
}
# Stop nginx daemons functions.
stop() {
       echo -n $&quot;Stopping $prog: &quot;
       killproc $nginxd
       RETVAL=$?
       echo
       [ $RETVAL = 0 ] &amp;&amp; rm -f /var/lock/subsys/nginx /var/run/nginx.pid
}
# reload nginx service functions.
reload() {
   echo -n $&quot;Reloading $prog: &quot;
   #kill -HUP `cat ${nginx_pid}`
   killproc $nginxd -HUP
   RETVAL=$?
   echo
}
# See how we were called.
case &quot;$1&quot; in
start)
       start
       ;;
stop)
       stop
       ;;
reload)
       reload
       ;;
restart)
       stop
       start
       ;;
status)
       status $prog
       RETVAL=$?
       ;;
*)
       echo $&quot;Usage: $prog {start|stop|restart|reload|status|help}&quot;
       exit 1
esac
exit $RETVAL
</code></pre>

<p>设置文件的权限</p>

<pre><code>chmod a+x /etc/init.d/nginx    (a+x ---- all user can execute 所有用户可执行)
</code></pre>

<p>这样就可以方便的操作：查看nginx当前状态、启动nginx、停止nginx、重启nginx...</p>

<p>开机自启动<br/>
vi /etc/rc.local<br/>
添加一行</p>

<pre><code>／etc/init.d/nginx start
</code></pre>

<p>下次重启生效</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[js正则表达式]]></title>
    <link href="http://notes.lidong.me/js-regexp.html"/>
    <updated>2016-02-29T12:37:46+08:00</updated>
    <id>http://notes.lidong.me/js-regexp.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">新建正则表达式：</h3>

<pre><code>var regexp = /aabb/g; //g可以省
var regexp = new Regexp(&quot;xyz&quot;,&quot;g&quot;); //第二个参数可省略
</code></pre>

<p>区别在于：<br/>
1.采用字面量的写法新建的正则表达式对象在代码编译时就会生成，是平常开发中常用的方式；<br/>
2.采用构造函数生成的正则对象要在代码运行时生成。</p>

<h3 id="toc_1">使用正则表达式：</h3>

<p>正则对象的方法是指这样使用的： RegExp对象.方法(字符串)<br/>
 字符串对象的方法是这样使用：字符串.方法(RegExp对象)</p>

<h2 id="toc_2">正则对象的属性和方法</h2>

<h3 id="toc_3">1.1 正则对象的属性：</h3>

<pre><code>ignoreCase  //返回一个布尔值表示正则对象是否设置i修饰符，只读属性
global  //表示正则对象是否设置了g修饰符
muktikine  //表示是否设置了m修饰符，返回布尔值
lastIndex  //返回下一次开始搜索的位置，该属性可读写，但只在设置了g修饰符有意义
source  //返回正则表达式的字符串形式（不包括反斜杠），只读属性
</code></pre>

<p>例子：<br/>
<img src="http://img.lidong.me/2015/02/F1XIrjz1Ta7w.png" alt=""/></p>

<pre><code>i 执行的时候忽略大小写匹配
g 执行全局匹配（查看所有的匹配而不是找到第一个匹配就停止）
m 执行多行匹配
</code></pre>

<h3 id="toc_4">1.2 test方法</h3>

<p>test方法返回布尔值，用来验证字符串是否符合某个模式。如果正则表达式带有g修饰符，则每一次test方法都从上一次匹配结束的位置开始匹配。</p>

<p>使用了g修饰符的正则对象，表示要记录搜索的位置，接着使用test方法，每次开始搜索的委会都是上一次匹配的后一个位置：</p>

<p><img src="http://img.lidong.me/2015/02/yAxtPduwBk0V.png" alt=""/></p>

<p>如果正则表达式是一个空字符串，则会匹配所有的字符串，但前提是使用new RegExp()的方式：</p>

<p><img src="http://img.lidong.me/2015/02/v3FQQasHlfe9.png" alt=""/></p>

<h3 id="toc_5">1.3 exec方法</h3>

<p>exec()返回匹配的结果，匹配成功返回装有匹配结果的数组，匹配失败返回null</p>

<p><img src="http://img.lidong.me/2015/02/aMqZRO3H3GSb.png" alt=""/></p>

<p>如果正则表达式包含圆括号，则返回的数组会包括多个元素。首先是整个匹配成功的结果，后面是圆括号里匹配成功的结果，如果有多个圆括号，他们的匹配成功的结果都会成为数组元素：</p>

<p><img src="http://img.lidong.me/2015/02/WwhUmwRF85df.png" alt=""/></p>

<p>调用exec方法后返回的数组具有以下两个属性：</p>

<pre><code>input 整个原来待匹配的字符串
index 整个模式匹配开始位置
</code></pre>

<p><img src="http://img.lidong.me/2015/02/NL6LZM7Qb5P3.png" alt=""/><br/>
给正则表达式加上g修饰符就可以多次使用exec方法，下一次搜索的位置从上一次成功匹配结束的位置开始。</p>

<p>如果正则对象是一个空字符串：<br/>
<img src="http://img.lidong.me/2015/02/rbyOilU5hlRg.png" alt=""/></p>

<h2 id="toc_6">字符串对象的方法</h2>

<pre><code>match 返回匹配的子字符串
search  搜索
replace  替换
split  分割
</code></pre>

<h3 id="toc_7">2.1 match()方法</h3>

<p>字符串对象的match方法和正则对象的exec方法比较类似：</p>

<p><img src="http://img.lidong.me/2015/02/wxfBhlBOt5bQ.png" alt=""/></p>

<p>但是如果正则表达式带有g修饰符，那么match方法与exec方法就有差别了：</p>

<p><img src="http://img.lidong.me/2015/02/LSFvdBnUvK1p.png" alt=""/></p>

<p>match返回了所有成功匹配的结果，但是exec方法返回一个。</p>

<h3 id="toc_8">2.2 search方法</h3>

<p>search方法返回匹配成功的位置在整个字符串中的索引，如果没有匹配成功任何字符则返回-1,search方法自动忽略g修饰符。</p>

<p><img src="http://img.lidong.me/2015/02/TY9VtGZKQwVf.png" alt=""/></p>

<h3 id="toc_9">2.3 replace方法</h3>

<p>str.replace(&#39;搜索模式&#39;，&#39;替换的内容&#39;);</p>

<p><img src="http://img.lidong.me/2015/02/FphzytozqKbA.png" alt=""/><br/>
如果正则表达式不带g修饰符，那么replace方法会替换第一个匹配成功的结果，如果加上g修饰符号，那么会替换所有匹配成功的结果。</p>

<p>replace方法第二个参数可以使用$符号，用来指代所要替换的内容：</p>

<pre><code>$&amp;  指代匹配的字符串
$`  匹配结果前面的文本
$&#39;  匹配结果后面的文本
$n  指代匹配成功的第n组内容，n从1开始
$$  指代美元符号
</code></pre>

<p><img src="http://img.lidong.me/2015/02/IVU3cLqYAiIQ.png" alt=""/></p>

<p>replace方法的第二个参数也可以是函数，用于将第一个参数匹配到的值替换成函数的返回值。</p>

<p><img src="http://img.lidong.me/2015/02/3W2iSi6dYVoj.png" alt=""/></p>

<h3 id="toc_10">2.4 split()方法</h3>

<p>split(&#39;字符串的分割正则&#39;,&#39;返回数组的最大成员数&#39;); 返回分割后各部分组成的数组。<br/>
<img src="http://img.lidong.me/2015/02/GJNZ7qGuMO3D.png" alt=""/></p>

<p>变换成正则的匹配规则来分割字符串。<br/>
<img src="http://img.lidong.me/2015/02/TnKy1BazCg8v.png" alt=""/></p>

<p>更多内容：<br/>
<a href="http://www.cnblogs.com/skylar/p/4265490.html">http://www.cnblogs.com/skylar/p/4265490.html</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS优化]]></title>
    <link href="http://notes.lidong.me/css-optimization.html"/>
    <updated>2016-02-29T12:06:47+08:00</updated>
    <id>http://notes.lidong.me/css-optimization.html</id>
    <content type="html"><![CDATA[
<h3 id="toc_0">一、提高可维护性</h3>

<p>1.1 命名与备注<br/>
提高自己命名的能力，可以多看看别人的代码。下面是CSS中的一些命名相关的建议</p>

<pre><code>头：header
内容：content/container
尾：footer
导航：nav
侧栏：sidebar
栏目：column
页面外围控制整体佈局宽度：wrapper
左右中：left right center
登录条：loginbar
标志：logo
广告：banner
页面主体：main
热点：hot
新闻：news
下载：download
子导航：subnav
菜单：menu
子菜单：submenu
搜索：search
友情链接：friendlink
页脚：footer
版权：copyright
滚动：scroll
内容：content
标签：tags
文章列表：list
提示信息：msg
小技巧：tips
栏目标题：title
加入：joinus
指南：guide
服务：service
注册：regsiter
状态：status
投票：vote
合作伙伴：partner
导航：nav
主导航：mainnav
子导航：subnav
顶导航：topnav
边导航：sidebar
左导航：leftsidebar
右导航：rightsidebar
菜单：menu
子菜单：submenu
标题: title
摘要: summary
</code></pre>

<p>1.2、书写顺序<br/>
这个书写顺序指的是各个样式的书写顺序，下面是推荐的CSS书写顺序<br/>
（1）位置属性(position, top, right, z-index, display, float等)<br/>
（2）大小(width, height, padding, margin)<br/>
（3）文字系列(font, line-height, letter-spacing, color- text-align等)<br/>
（4）背景(background, border等)<br/>
（5）其他(animation, transition等)<br/>
书写顺序不一定非得按照上面的推荐来进行，而是根据你自己的习惯，但是最好能保证前后的习惯一致的，或者团队应该有一个共同的代码规范去遵守，这样后期维护起来也会方便许多。</p>

<p>1.3、提取重复样式</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[campass与sass]]></title>
    <link href="http://notes.lidong.me/campass-sass.html"/>
    <updated>2016-02-26T16:43:23+08:00</updated>
    <id>http://notes.lidong.me/campass-sass.html</id>
    <content type="html"><![CDATA[
<p><a href="media/14564762031999/source.">source</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[走进搜索引擎]]></title>
    <link href="http://notes.lidong.me/learn-search-engine.html"/>
    <updated>2016-02-25T13:08:52+08:00</updated>
    <id>http://notes.lidong.me/learn-search-engine.html</id>
    <content type="html"><![CDATA[

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装fail2ban 防止服务器的暴力攻击]]></title>
    <link href="http://notes.lidong.me/install-fail2ban.html"/>
    <updated>2016-02-04T12:15:01+08:00</updated>
    <id>http://notes.lidong.me/install-fail2ban.html</id>
    <content type="html"><![CDATA[
<p>发现<a href="http://notes.lidong.me/server-safe.html">服务器被扫描得厉害</a>，所以赶紧采取措施，以免被攻破（虽然没用什么宝贝，采取防御措施是不可以少的☺️）</p>

<p>安装</p>

<pre><code>sudo yum install fail2ban
</code></pre>

<p>修改配置文件（(注意修改其中的内容修改成你自己的内容，如果你是安装的<a href="http://">msmtp</a>要将<code>mta=sendmail</code>修改为<code>mta＝msmtp</code>）</p>

<pre><code>sudo vi /etc/fail2ban/jail.local
</code></pre>

<p>配置文件内容</p>

<pre><code>[DEFAULT]
# 以空格分隔的列表，可以是 IP 地址、CIDR 前缀或者 DNS 主机名
# 用于指定哪些地址可以忽略 fail2ban 防御
ignoreip = 127.0.0.1 172.31.0.0/24 10.10.0.0/24 192.168.0.0/24
# 客户端主机被禁止的时长（秒）
bantime = 86400
# 客户端主机被禁止前允许失败的次数 
maxretry = 5
# 查找失败次数的时长（秒）
findtime = 600 
mta = sendmail
[ssh-iptables]
enabled = true
filter = sshd
action = iptables[name=SSH, port=ssh, protocol=tcp]
sendmail-whois[name=SSH, dest=your@email.com, sender=fail2ban@email.com]
# Debian 系的发行版 
logpath = /var/log/auth.log
# Red Hat 系的发行版
logpath = /var/log/secure
# ssh 服务的最大尝试次数 
maxretry = 3
</code></pre>

<p>配置文件准备就绪后，重启fail2ban服务</p>

<pre><code>sudo systemctl restart fail2ban
</code></pre>

<p>验证fail2ban，使用参数&#39;ping&#39;来运行fail2ban-client 命令。 如果fail2ban服务正常运行，你可以看到“pong（嘭）”作为响应。</p>

<pre><code>$ sudo fail2ban-client ping
Server replied: pong


sudo tail -f /var/log/fail2ban.log

为了测试fail2ban是否能正常工作，尝试通过使用错误的密码来用SSH连接到服务器模拟一个暴力破解攻击。与此同时，监控 /var/log/fail2ban.log，该文件记录在fail2ban中发生的任何敏感事件,(安装fail2ban之前的系统日志，也会被监控)

sudo tail -f /var/log/fail2ban.log
</code></pre>

<p>fail2ban会自动反向查询IP的主机信息<br/><br/>
<img src="http://img.lidong.me/2015/02/Ku6WGJyAi2BA.png" alt=""/></p>

<p>查看fail2ban状态信息</p>

<pre><code>sudo fail2ban-client status
</code></pre>

<p>设置开机自启动</p>

<pre><code>sudo systemctl enable fail2ban
</code></pre>

<p>此处只记录了centos7的操作。</p>

<p>更多参考：<br/>
1.<a href="https://linux.cn/article-5067-1.html">如何使用 fail2ban 防御 SSH 服务器的暴力破解攻击</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装msmtp使用smtp发送邮件]]></title>
    <link href="http://notes.lidong.me/install-msmtp.html"/>
    <updated>2016-02-04T11:20:27+08:00</updated>
    <id>http://notes.lidong.me/install-msmtp.html</id>
    <content type="html"><![CDATA[
<p>1.下载</p>

<pre><code>wget http://downloads.sourceforge.net/msmtp/msmtp-1.6.3.tar.xz
xz -z msmtp-1.6.3.tar.xz
tar xvf msmtp-1.6.3.tar
</code></pre>

<p>2.安装</p>

<pre><code>cd msmtp-1.6.3
./configure –prefix=/usr/local/msmtp
sudo make
sudo make install
</code></pre>

<p>3.配置</p>

<pre><code>cd /usr/local/msmtp
//新建文件夹etc, 
mkdir etc 
//新建文件
vi /usr/local/msmtp/etc/msmtprc
</code></pre>

<p>编辑内容（部分内容需要修改成你自己的）</p>

<pre><code># Set default values for all following accounts.
defaults
logfile /usr/local/msmtp/msmtp.log 
# The SMTP server of the provider. 
account test
# SMTP邮件服务器地址
host smtp.qq.com
# 发送的邮件Email
from xiaobaichi@qq.com
auth login
# 邮件服务器登录账号
user xiaobaichi@qq.com
# 邮件服务器登陆密码
password 123456
# Set a default account
account default: test
</code></pre>

<p>为了安全起见，修改文件的权限<code>chmod 600 etc/msmtprc</code></p>

<p>4.测试</p>

<pre><code>/usr/local/msmtp/bin/msmtp youremail@test.com

输入任意字符，然后按Ctrl+D退出，查看邮件是否收到。

由于设置了日志，可以到 /usr/local/msmtp/msmtp.log，查看日志，发信成功失败都会有记录。
</code></pre>

<p>参考：<br/>
    1.解压tar.xz文件 参考<a href="http://blog.csdn.net/rheostat/article/details/7614451">这里</a><br/>
    2.官方<a href="http://msmtp.sourceforge.net/documentation.html">配置文档</a></p>

]]></content>
  </entry>
  
</feed>
